<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Advance Care Plan - Muletown Law</title>
    <script crossorigin src="https://unpkg.com/react@18/umd/react.production.min.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body>
    <div id="root"></div>
    
    <script>
        const { useState } = React;

        function ACPGenerator() {
            const [formData, setFormData] = useState({
                CLIENT_NAME: '',
                AGENT1_NAME: '',
                AGENT1_RELATION: 'spouse',
                AGENT2_NAME: '',
                AGENT2_RELATION: 'child',
                EXEC_MONTH: 'October',
                EXEC_YEAR: '2025'
            });

            const [isGenerating, setIsGenerating] = useState(false);

            const handleChange = (e) => {
                setFormData({
                    ...formData,
                    [e.target.name]: e.target.value
                });
            };

            const generateDocument = async () => {
                setIsGenerating(true);

                try {
                    const response = await fetch('/api/generate-acp', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(formData)
                    });

                    if (response.ok) {
                        const blob = await response.blob();
                        const url = window.URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = `ACP_${formData.CLIENT_NAME.replace(/ /g, '_')}.docx`;
                        document.body.appendChild(a);
                        a.click();
                        window.URL.revokeObjectURL(url);
                        document.body.removeChild(a);
                    } else {
                        alert('Error generating document. Please try again.');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error generating document. Please check your connection and try again.');
                } finally {
                    setIsGenerating(false);
                }
            };

            const monthNames = ["January", "February", "March", "April", "May", "June",
                "July", "August", "September", "October", "November", "December"];

            return (
                <div className="min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
                    <div className="max-w-3xl mx-auto">
                        <div className="bg-white shadow-md rounded-lg p-8">
                            <div className="mb-8 text-center">
                                <h1 className="text-3xl font-bold text-gray-900 mb-2">
                                    Advance Care Plan
                                </h1>
                                <p className="text-gray-600">Muletown Law, P.C.</p>
                                <p className="text-sm text-gray-500">Complete the form below to generate your Advance Care Plan</p>
                            </div>

                            <div className="space-y-6">
                                {/* Client Information */}
                                <div className="border-b pb-4">
                                    <h2 className="text-xl font-semibold text-gray-800 mb-4">Client Information</h2>
                                    
                                    <div className="mb-4">
                                        <label className="block text-sm font-medium text-gray-700 mb-1">
                                            Client Full Name *
                                        </label>
                                        <input
                                            type="text"
                                            name="CLIENT_NAME"
                                            value={formData.CLIENT_NAME}
                                            onChange={handleChange}
                                            className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                            required
                                        />
                                    </div>
                                </div>

                                {/* Primary Agent */}
                                <div className="border-b pb-4">
                                    <h2 className="text-xl font-semibold text-gray-800 mb-4">Primary Healthcare Agent</h2>
                                    
                                    <div className="mb-4">
                                        <label className="block text-sm font-medium text-gray-700 mb-1">
                                            Agent Name *
                                        </label>
                                        <input
                                            type="text"
                                            name="AGENT1_NAME"
                                            value={formData.AGENT1_NAME}
                                            onChange={handleChange}
                                            className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                            required
                                        />
                                    </div>

                                    <div className="mb-4">
                                        <label className="block text-sm font-medium text-gray-700 mb-1">
                                            Relationship *
                                        </label>
                                        <input
                                            type="text"
                                            name="AGENT1_RELATION"
                                            value={formData.AGENT1_RELATION}
                                            onChange={handleChange}
                                            placeholder="e.g., spouse, child, sibling"
                                            className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                            required
                                        />
                                    </div>
                                </div>

                                {/* Alternate Agent */}
                                <div className="border-b pb-4">
                                    <h2 className="text-xl font-semibold text-gray-800 mb-4">Alternate Healthcare Agent</h2>
                                    
                                    <div className="mb-4">
                                        <label className="block text-sm font-medium text-gray-700 mb-1">
                                            Alternate Agent Name *
                                        </label>
                                        <input
                                            type="text"
                                            name="AGENT2_NAME"
                                            value={formData.AGENT2_NAME}
                                            onChange={handleChange}
                                            className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                            required
                                        />
                                    </div>

                                    <div className="mb-4">
                                        <label className="block text-sm font-medium text-gray-700 mb-1">
                                            Relationship *
                                        </label>
                                        <input
                                            type="text"
                                            name="AGENT2_RELATION"
                                            value={formData.AGENT2_RELATION}
                                            onChange={handleChange}
                                            placeholder="e.g., child, sibling, friend"
                                            className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                            required
                                        />
                                    </div>
                                </div>

                                {/* Execution Date */}
                                <div className="border-b pb-4">
                                    <h2 className="text-xl font-semibold text-gray-800 mb-4">Execution Date</h2>
                                    
                                    <div className="grid grid-cols-2 gap-4">
                                        <div>
                                            <label className="block text-sm font-medium text-gray-700 mb-1">
                                                Month *
                                            </label>
                                            <select
                                                name="EXEC_MONTH"
                                                value={formData.EXEC_MONTH}
                                                onChange={handleChange}
                                                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                            >
                                                {monthNames.map(month => (
                                                    <option key={month} value={month}>{month}</option>
                                                ))}
                                            </select>
                                        </div>

                                        <div>
                                            <label className="block text-sm font-medium text-gray-700 mb-1">
                                                Year *
                                            </label>
                                            <input
                                                type="text"
                                                name="EXEC_YEAR"
                                                value={formData.EXEC_YEAR}
                                                onChange={handleChange}
                                                placeholder="2025"
                                                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                                required
                                            />
                                        </div>
                                    </div>
                                </div>

                                {/* Information Box */}
                                <div className="bg-blue-50 border border-blue-200 rounded-md p-4">
                                    <p className="text-sm text-blue-800">
                                        <strong>Note:</strong> This Advance Care Plan includes standard provisions for quality of life determinations, 
                                        treatment preferences, and organ donation options. The complete document will be generated for your review.
                                    </p>
                                </div>

                                {/* Generate Button */}
                                <div className="pt-4">
                                    <button
                                        onClick={generateDocument}
                                        disabled={isGenerating || !formData.CLIENT_NAME || !formData.AGENT1_NAME || !formData.AGENT2_NAME}
                                        className="w-full bg-blue-600 text-white py-3 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:bg-gray-400 disabled:cursor-not-allowed font-semibold"
                                    >
                                        {isGenerating ? 'Generating Document...' : 'Generate Advance Care Plan'}
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div className="mt-6 text-center text-sm text-gray-600">
                            <p>© 2025 Muletown Law, P.C. All rights reserved.</p>
                        </div>
                    </div>
                </div>
            );
        }

        ReactDOM.render(<ACPGenerator />, document.getElementById('root'));
    </script>
</body>
</html>
